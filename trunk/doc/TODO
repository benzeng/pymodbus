---------------------------------------------------------------------------
General
---------------------------------------------------------------------------
- add crc/lrc check on incoming data
- make framer read header->read header.length
  - maybe just for sync 
- finish clients (and interface)
- add all modbus control into server
- add a frontend plugin system
  - web frontend (bottle)
  - ssh/telnet frontend (manhole)
- twisted trial / twisted logging
- twisted serial server
- add daemonize code / init.d / config (or just use twisted)
- add correct transaction handling (retry, fail, etc)

---------------------------------------------------------------------------
Protocols
---------------------------------------------------------------------------
- Serial RTU -> just use sleep wait
- Test serial against devices (and virtual tty)

---------------------------------------------------------------------------
Functions
---------------------------------------------------------------------------
- Diagnostic
- Server informtation
- Server settings
- Mask functions

---------------------------------------------------------------------------
Server Context
---------------------------------------------------------------------------
- link to other clients (other machines, other instances)

---------------------------------------------------------------------------
Client
---------------------------------------------------------------------------
- Rework transaction flow and response data
- Finish rtu framers

---------------------------------------------------------------------------
Tools
---------------------------------------------------------------------------
- Get 100%ish code coverage with solid unit testing to ensure reliability
- add functional tests

--------------------------------------------------------------------------- 
Scratch
--------------------------------------------------------------------------- 
from twisted.python import log
observer = log.PythonLoggingObserver()
observer.start()

